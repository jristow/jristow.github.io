{"data":{"site":{"siteMetadata":{"title":"Jordan Ristow","author":"Jordan Ristow"}},"markdownRemark":{"id":"afe4b554-f987-5bfd-89f7-3582cf08721d","excerpt":"Problem StatementGiven two sorted number arrays, nums1 and nums2, merge nums2 into nums1 as one sorted array.We are given m and n which represent theâ€¦","html":"<h1>Problem Statement</h1>\n<p>Given two sorted number arrays, nums1 and nums2, merge nums2 into nums1 as one sorted array.</p>\n<p>We are given m and n which represent the initialized elements in nums1 and nums2 respectively. We may assume that nums1 was initialized with enough space to fit all values from nums2.</p>\n<h1>Description of Algorithm</h1>\n<p>One method of doing this is to brute force our way through the arrays. The pseudocode would look like:\nLook at first item in nums1\ncompare to first item in nums2\nif smaller, go to next item in nums1\nif larger, move nums1 item one to the right, insert nums2 item one.</p>\n<p>This would progress through each item in each list until they are all in place. This is extremely inefficient however.</p>\n<p>A better algorithm would use the fact that they are already sorted smallest to largest and that we know the total length nums1 will be after merging, m+n. With this, we can start at the end of both lists, comparing values and replacing values as we go. Pseudocode:\nLook at last element in nums1\ncompare to last element in nums2\nif smaller, remove nums2 element and place in last spot of nums1\nif larger, move one element back in nums1</p>\n<h1>Algorithm in Code</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums1<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> nums2<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> nums2<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> m<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> nums1<span class=\"token punctuation\">[</span>m<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums2<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                nums1<span class=\"token punctuation\">[</span>m<span class=\"token operator\">+</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">[</span>m<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                m <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                nums1<span class=\"token punctuation\">[</span>m<span class=\"token operator\">+</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></code></pre></div>\n<h1>Code Walkthrough</h1>","frontmatter":{"title":"Daily Algorithm Practice - Merge Sorted Lists","date":"May 24, 2019","description":"Todays algorithm practice focuses on merging two sorted lists into one in constant space."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/daily-algorithm-24-may/","previous":{"fields":{"slug":"/daily-algorithm-practice-23-may/"},"frontmatter":{"title":"Daily Algorithm Work May 23, 2019"}},"next":{"fields":{"slug":"/react-conversion-part-one/"},"frontmatter":{"title":"Building a React Based Portfolio Index Site"}}}}